name: Pyinstaller Release

on:
  push:
    tags:
      - 'V*' #
  workflow_dispatch:

env:
  HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-11
            TARGET: macos
            CMD_BUILD: >
                pyinstaller RNAlysis.spec &&
                cd dist/ &&
                zip -r RNAlysis-3.3.0 RNAlysis*
            OUT_FILE_NAME: RNAlysis-3.3.0.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
                pyinstaller RNAlysis.spec &&
                cd dist/ &&
                7z a RNAlysis-3.3.0.zip -r "RNAlysis-3.3.0/"
            OUT_FILE_NAME: RNAlysis-3.3.0.zip
            ASSET_MIME: application/zip
    steps:
    - uses: actions/checkout@v2
    - name: brew update (macOS)
      if: runner.os == 'MacOS'
      run: brew update
    - name: Setup Graphviz
      uses: ts-graphviz/setup-graphviz@v1
    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
           version: "9.0"
           directory: ${{ runner.temp }}/llvm
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pyinstaller
        python -m pip install .[all]
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
